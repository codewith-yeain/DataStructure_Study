자료구조(data structure)
	데이터를 어떻게 저장하고, 어떻게 꺼내올 것인가


알고리즘
	문제해결을 위한 일련의 과정

프로그램의 구성
	자료구조와 알고리즘

자료구조에 대한 적절한 지식이 있다면 보다 효율적인 알고리즘을 구현할 수 있다.

기본자료구조
	변수, 배열, 구조체
-----------------------------------------------------------------------
배열
	여러개의 값을 한 번에 저장할 때 사용한다.
	배열은 시작 주소를 알고 있다.

문자열
	마지막에는 \0(널문장)를 써서 문자열의 끝임을 알려준다.
	쌍따옴표를 쓰면 중괄호, 작은따옴표, 널문자를 생략해도 알아서 넣어준다.

역참조연산자 *
	*를 주소값 앞에 사용하면 그 안의 값을 읽어준다.
	이 때, []를 활용하여 값을 읽을 수 있고,
	해당 번호를 인덱스 번호라고 한다.
	따라서 배열은 0부터 칸수 -1만큼 인덱스 번호가 존재한다.

sizeof 연산자
	byte 크기를 구해서 알려준다.
	sizeof(배열명) 배열이 차지하는 byte 크기를 구해준다.

배열의 길이(요소의 갯수) 구하기
	전체 배열의 size를 각 요소의 size로 나눠주면 된다.
----------------------------------------------------------
포인터 변수
	주소값을 담아주는 변수이다.
	(특정 변수의 위치를 가리킨다.)

선언 방법
	자료형* 포인터변수명 = 주소값;
----------------------------------------------------------
포인터와 배열
	배열의 이름은 시작주소값을 가지고 있기 때문에 포인터이다.
	그러나 배열의 경우 다른 주소값으로 변경이 불가능하다.
	따라서 배열은 포인터 상수이다.

char word[] = "apple";
이때 word는 주소값을 가지고 있다.
배열이기 때문에 다른 주소값으로 변경이 불가능하다!
단, 요소의 수정은 가능하다.

char* word = "apple";
word는 포인터 변수이므로 가리키는 주소값 변경이 가능하다!

포인터와 배열의 차이점
	포인터는 자신이 가리키고 있는 주소값을 변경할 수 있다.
	배열은 자신이 가리키고 있는 주소값을 변경 못한다.(포인터 상수)

배열형태 문자열 vs 포인터변수 문자열
	배열형태의 문자열의 경우 요소별로 값을 변경할 수 있다.
	포인터 변수형태의 문자열은 가리키고 있는 문자열을 바꿀 수 있다.

배열 포인터 vs 포인터 배열 ( 바나나 우유 )
	배열 포인터: 배열의 주소값을 가리키는 포인터
	포인터 배열: 요소로 포인터가 있는 배열










